// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0
// source: users.sql

package sqlcdb

import (
	"context"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (
    id,
    email,
    created_at,
    updated_at
) VALUES (
    ?,
    ?,
    DATE('now'),
    DATE('now')
) RETURNING id, created_at, updated_at, email
`

type CreateUserParams struct {
	ID    string
	Email string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRowContext(ctx, createUser, arg.ID, arg.Email)
	var i User
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Email,
	)
	return i, err
}
